for (i in size_a[1]) {
data_sd[1,i] <- sd(a[,i])
}
size_a <- dim(a)
matrix(size_a)
size_a[1,1]
data_sd <- matrix(0, nrow = size_a[1], ncol = size_a[2])
for (i in size_a[2]) {
data_sd[1,i] <- sd(a[,i])
}
data_sd
rm(data_sd)
size_a <- dim(a)
matrix(size_a)
size_a[1,1]
data_sd <- matrix(0, nrow = size_a[1], ncol = size_a[2])
for (i in size_a[2]) {
data_sd[1,i] <- sd(a[,i])
}
data_sd
data_sd <- matrix(0, ncol = size_a[2])
data_sd <- matrix(0, ncol = size_a[2])
data_sd
size_a <- dim(a)
matrix(size_a)
size_a[1,1]
data_sd <- matrix(0, ncol = size_a[2])
for (i in size_a[2]) {
data_sd[1,i] <- sd(a[,i])
}
data_sd
a
sd(c(1:6))
sd(c(7:12))
size_a <- dim(a)
matrix(size_a)
size_a[1,1]
data_sd <- matrix(0, ncol = size_a[2])
for (i in 1:size_a[2]) {
data_sd[1,i] <- sd(a[,i])
}
data_sd
size_a <- dim(a)
data_sd <- matrix(0, ncol = size_a[2])
for (i in 1:size_a[2]) {
data_sd[1,i] <- sd(a[,i])
}
data_sd
animals <- c(dog, cat, bear, dog, dog bear)
animals <- c("dog", "cat", "bear", "dog", "dog", bear"")
animals <- c("dog", "cat", "bear", "dog", "dog", "bear)
animals <- c("dog", "cat", "bear", "dog", "dog", "bear")
animals <- c(dog, cat, bear, dog, dog, bear)
animals <- c("dog, cat, bear, dog, dog, bear")
animals
animals <- c("dog", "cat", "bear", "dog", "dog", "bear")
animals
animals(dog)
dog <-animal(dog)
dog <-animal("dog")
dog <-animal[dog]
dog <-animals("dog")
dog <-animals(dog)
dog <-animals[dog]
dog <-which(animals == "dog")
dog
View(activity)
activity
unique(animals)
a <- c(1:6, 6:1)
a
a <- matrix(c(1:6, 6:1), ncol = 2)
a
a <- matrix(c(1:6, 6:1), ncol = 1)
a
colnames(a) <-V1
colnames(a) <- "V1"
head(a)
head(activity)
base1 <- merge(a, activity, by = V1)
base1 <- merge(a, activity, by = "V1")
base1
a
base1 <- merge(activity, a, by = "V1")
base1 <- merge(a, activity, by = "V1")
base1 <- merge(a, activity, by = "V1")
base1 <- merge(activity, a, by = "V1")
base1
library(plyr1)
library(plyr)
install.packages("plyr")
library(plyr)
plyr1(join(a, activity, by = "V1"))
plyr1 <- join(a, activity, by = "V1")
a
b <- a(1=activity[1])
activity(1)
activity[1]
activity[2]
activity[2,1]
activity[2,2]
activity[2,2]
activity
activity[[2,2]
]
attributes(activity)
b<-a
b[b == 1] <- activity[2,2]
b
activity[2,2]
activity[2,1]
activity[1,1]
activity[2,1]
activity[1,2]
activity[[1,2]
]
activity$V@
activity$V2
activity$V2
activity[7]
activity[6]
activity[1,1,]
activity[1,2,]
activity[3,2,]
activity[[3,2,]]
View(s_data)
head(features)
a <- 1:5
a
a <- matrix(c(1:6, 6:1), ncol = 6)
a
colnames(a) <- features(1:5)
features(1:5)
features[1:5]
features$V2[1:5]
colnames(a) <- features$V2[1:5]
b <- features$V2[1:5]
b
b <- features$V2[[1:5]]
b <- features$V2[1:5]
b
unique(features)
features[1,1]
features[2,1]
features[2,2]
features[2,2,[1]]
head(features)
features$V2[1]
features$V2[[1]
]
bfeatures$V2[1]
b=features$V2[1]
b
b[1]
b[1,1]
b[1,1,]
b[1,]
View(activity)
activity$V2
a
a <- matrix(c(1:6, 6:1), ncol = 1)
a
colnames(a) <- "V2"
a
total <- merge(a,activity$V2,by="V2")
total <- merge(a, activity$V2, by="V1")
total <- merge(a, activity, by="V1")
total <- merge(data a, data activity, by = "V1")
data.frame(a)
attributes(a)
rm a
rm(a)
data.frame(a)
data.frame(1:12)
colnames(a) <- "V2"
a<-data.frame(1:12)
colnames(a) <- "V2"
a
merge(a, activity)
merge(activity, a)
activity$V2[1]
activity$V2[6]
activity$V2[6,1]
activity$V2[6,1,]
activity$V2[6]
match(a, activity$V2)
match(a, activity$V1)
match(a, activity)
View(features)
View(activity)
activity_labels <- read.table("activity_labels.txt")[,2]
activity_labels
grepl("mean|std", features$V2)
View(features)
View(features)
names(x_data) = features$V2
head(x_data)
names(x_data) <- features$V2
head(x_data)
activity_labels
activity
activity$V2
y_yest
head(y_test_data)
y_test_data <- read.table("test/y_test.txt")
head(y_test_data)
y_text[,2] = activity$V2[y_test[,1]]
y_test_data[,2] = activity$V2[y_test[,1]]
y_test_data[,2] = activity$V2[y_test_data[,1]]
head(y_test_data)
View(y_data)
View(y_data)
install.package("data.table")
install.package("reshape2")
##Setup the working environment
x_test_data <- read.table("test/X_test.txt")
y_test_data <- read.table("test/y_test.txt")
x_train_data <- read.table("train/X_train.txt")
y_train_data <- read.table("train/y_train.txt")
subject_test_data <- read.table("test/subject_test.txt")
subject_train_data <- read.table("train/subject_train.txt")
features <- read.table("features.txt")
activity <- read.table("activity_labels.txt")
FullDataSetx <- rbind(x_test_data, x_train_data)
FullDataSety <- rbind(y_test_data, y_train_data)
FullDataSets <- rbind(subject_test_data, subject_train_data)
##Extracts only the measurements on the mean and stdevfor each measurement
extract_features <- grepl("mean|std", features$V2)
x_data_short <- FullDataSetx[, extract_features]
##Uses descriptive activity names to name the activities in the data set
FullDataSety[,2] = activity$V2[FullDataSety[,1]]
names(FullDataSety) = c("Activity_ID", "Activity_Label")
names(FullDataSets) = "Subject"
##Appropriately label the data set with descriptive variable names
names(FullDataSetx) = features$V2
##Merges the training and the test sets to create one data set
data <- cbind(FullDataSets, FullDataSety, FullDataSetx)
head(data)
extractFeatures <- grepl("mean|std", features$V2)
data <- cbind(FullDataSets, FullDataSety, FullDataSetx[, extractFeatures])
View(data)
View(data)
unique(data$subject)
unique(data$Subject)
for i in unique(data$Subject){print(i)}
for (i in unique(data$Subject)){print(i)}
data$ActivityID
unique(data$Activity_ID)
head(c(data[,1], data[,2])
)
head(c(data[,1]))
head(c(data[,2]))
head(c(data[,2], ".", data[,2]))
head(c(data[,1], ".", data[,2]))
head(c(data[,1], ., data[,2]))
colMeans(data[1:2,4:6])
colMeans(data[1:2,3:6])
colMeans(data[1:2,3])
Mean(data[1:2,3])
Mean(data[1:2,4])
Mean(data[1:2,4:6])
mean(data[1:2,4:6])
mean(data[1:2,4:5])
mean(data[1:2,4])
mean(data[1:2,3])
length(data)
dim(data)
currentrow = 1
for (i in unique(data[,1])) {
#select_i <- which(data[,1] == i)
for (j in unique(data[,2])) {
select_j <- which(data[,2] == j)
TidyData[currentrow,1] = i
TidyData[currentrow,2] = j
TidyData[currentrow,3] = 0
TidyData[currentrow,4:lenth(data)] <= colMeans(data[j,])
currentrow = currentrow + 1
}
}
TidyData = 0
currentrow = 1
for (i in unique(data[,1])) {
#select_i <- which(data[,1] == i)
for (j in unique(data[,2])) {
select_j <- which(data[,2] == j)
TidyData[currentrow,1] = i
TidyData[currentrow,2] = j
TidyData[currentrow,3] = 0
TidyData[currentrow,4:lenth(data)] <= colMeans(data[j,])
currentrow = currentrow + 1
}
}
i
j
j[1]
TidyData = 0
currentrow = 1
for (i in unique(data[,1])) {
#select_i <- which(data[,1] == i)
for (j in unique(data[,2])) {
select_j <- which(data[,2] == j)
TidyData[currentrow,1] <- i
TidyData[currentrow,2] = j
TidyData[currentrow,3] = 0
TidyData[currentrow,4:lenth(data)] <= colMeans(data[j,])
currentrow = currentrow + 1
}
}
i[[1]]
TidyData[currentrow,1] <- i[1]
TidyData[currentrow,1] <- i
currentrow
TidyData
TidyData[1,1] = 1
TidyData[[1,1]] = 1
TidyData[1] = 1
TidyData < matrix()
currentrow = 1
for (i in unique(data[,1])) {
#select_i <- which(data[,1] == i)
for (j in unique(data[,2])) {
select_j <- which(data[,2] == j)
TidyData[currentrow,1] <- i[1]
TidyData[currentrow,2] = j
TidyData[currentrow,3] = 0
TidyData[currentrow,4:lenth(data)] <= colMeans(data[j,])
currentrow = currentrow + 1
}
}
dim(TidyData)
attributes(TidyData)
TidyData <- matrix()
attributes(TidyData)
TidyData <- matrix()
currentrow = 1
for (i in unique(data[,1])) {
#select_i <- which(data[,1] == i)
for (j in unique(data[,2])) {
select_j <- which(data[,2] == j)
TidyData[currentrow,1] <- i[1]
TidyData[currentrow,2] = j
TidyData[currentrow,3] = 0
TidyData[currentrow,4:lenth(data)] <= colMeans(data[j,])
currentrow = currentrow + 1
}
}
currentrow
TidyData
j
j
TidyData <- matrix()
currentrow = 1
for (i in unique(data[,1])) {
#select_i <- which(data[,1] == i)
for (j in unique(data[,2])) {
select_j <- which(data[,2] == j)
TidyData[currentrow,1] <- i[1]
TidyData[currentrow,2] <- j
TidyData[currentrow,3] <- 0
TidyData[currentrow,4:lenth(data)] <= colMeans(data[j,])
currentrow = currentrow + 1
}
}
TidyData <- matrix()
currentrow = 1
for (i in unique(data[,1])) {
#select_i <- which(data[,1] == i)
for (j in unique(data[,2])) {
select_j <- which(data[,2] == j)
TidyData[currentrow,1] <- i[1]
TidyData[currentrow,2] <- j
TidyData[currentrow,3] <- 0
TidyData[currentrow,4:lenth(data)] <= colMeans(data[select_j,])
currentrow = currentrow + 1
}
}
TidyData <- matrix()
currentrow = 1
for (i in unique(data[,1])) {
#select_i <- which(data[,1] == i)
for (j in unique(data[,2])) {
select_j <- which(data[,2] == j)
TidyData[currentrow,1] = i
TidyData[currentrow,2] = j
TidyData[currentrow,3] = 0
TidyData[currentrow,4:lenth(data)] <= colMeans(data[select_j,])
currentrow = currentrow + 1
}
}
data[1:5,1]+data[1:5,2]/1
data[1:5,1]+data[1:5,2]/10
unique(data[,2])
unique(data[,1]+data[,2])
unique(data[,1]+data[,2]/10)
length(unique(data[,1]+data[,2]/10))
length(data)
TidyData <- matrix(0, nrow=unique(data[,1]+data[,2]), ncol=length(data))
dim(TidyData)
TidyData <- matrix(0, nrow=length(unique(data[,1]+data[,2])), ncol=length(data))
dim(TidyData)
length(unique(data[,1]+data[,2]/10))
TidyData <- matrix(0, nrow=length(unique(data[,1]+data[,2]/10)),
ncol=length(data))
dim(TidyData)
head(TidyData)
names(TidyData) = names(data)
head(TidyData)
names(data)
names(TidyData) <- names(data)
names(data)
head(TidyData)
TidyData <- data.frame(0, nrow=length(unique(data[,1]+data[,2]/10)),
ncol=length(data))
names(TidyData) = names(data)
head(TidyData)
dim(data)
dim(TidyData)
TidyData <- matrix(0, nrow=length(unique(data[,1]+data[,2]/10)),
ncol=length(data))
TidyData <- data.frame(TidyData)
names(TidyData) = names(data)
dim(TidyData)
names(TidyData)
TidyData <- matrix(0, nrow=length(unique(data[,1]+data[,2]/10)),
ncol=length(data))
TidyData <- data.frame(TidyData)
names(TidyData) = names(data)
dim(TidyData)
dim(TidyData)
TidyData <- matrix(0, nrow=length(unique(data[,1]+data[,2]/10)),
ncol=length(data))
TidyData <- data.frame(TidyData)
names(TidyData) = names(data)
currentrow = 1
for (i in unique(data[,1])) {
#select_i <- which(data[,1] == i)
for (j in unique(data[,2])) {
select_j <- which(data[,2] == j)
TidyData[currentrow,1] = i
TidyData[currentrow,2] = j
TidyData[currentrow,3] = 0
TidyData[currentrow,4:lenth(data)] <= colMeans(data[select_j,])
currentrow = currentrow + 1
}
}
TidyData
dim(TidyData)
TidyData <- matrix(0, nrow=length(unique(data[,1]+data[,2]/10)),
ncol=length(data))
TidyData <- data.frame(TidyData)
names(TidyData) = names(data)
currentrow = 1
for (i in unique(data[,1])) {
#select_i <- which(data[,1] == i)
for (j in unique(data[,2])) {
select_j <- which(data[,2] == j)
TidyData[currentrow,1] = i
TidyData[currentrow,2] = j
TidyData[currentrow,3] = 0
TidyData[currentrow,4:lenth(data)] <= colMeans(data[select_j,])
currentrow = currentrow + 1
}
}
TidyData <- matrix(0, nrow=length(unique(data[,1]+data[,2]/10)),
ncol=length(data))
TidyData <- data.frame(TidyData)
names(TidyData) = names(data)
currentrow = 1
for (i in unique(data[,1])) {
#select_i <- which(data[,1] == i)
for (j in unique(data[,2])) {
select_j <- which(data[,2] == j)
TidyData[currentrow,1] = i
TidyData[currentrow,2] = j
TidyData[currentrow,3] = 0
TidyData[currentrow,4:length(data)] <= colMeans(data[select_j,])
currentrow = currentrow + 1
}
}
select_j
select_i <- which(data[,1] == i)
select_i
for (j in unique(data[select_i,2])) {print(j)}
select_j
select_j = 1:10
colMeans(data[select_j,])
colMeans(data[1:10, ])
colMeans(data[select_j,4:length(data)])
TidyData <- matrix(0, nrow=length(unique(data[,1]+data[,2]/10)),
ncol=length(data))
TidyData <- data.frame(TidyData)
names(TidyData) = names(data)
currentrow = 1
for (i in unique(data[,1])) {
select_i <- which(data[,1] == i)
for (j in unique(data[select_i,2])) {
select_j <- which(data[,2] == j)
TidyData[currentrow,1] = i
TidyData[currentrow,2] = j
TidyData[currentrow,3] = 0
TidyData[currentrow,4:length(data)] =
colMeans(data[select_j,4:length(data)])
currentrow = currentrow + 1
}
}
head(TidyData)
TidyData[,3] = activity$V2[Tidydata[,2]]
TidyData[,3] = activity$V2[TidyData[,2]]
TidyData[,3] = activity$V2[Tidydata[,2]]
head(TidyData)
View(data)
View(activity)
